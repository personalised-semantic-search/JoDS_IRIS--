/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.deri.iris.parser.node;

import org.deri.iris.parser.analysis.Analysis;

@SuppressWarnings("nls")
public final class ADirectiveExpr extends PExpr
{
    private PDirective _directive_;

    public ADirectiveExpr()
    {
        // Constructor
    }

    public ADirectiveExpr(
        @SuppressWarnings("hiding") PDirective _directive_)
    {
        // Constructor
        setDirective(_directive_);

    }

    @Override
    public Object clone()
    {
        return new ADirectiveExpr(
            cloneNode(this._directive_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADirectiveExpr(this);
    }

    public PDirective getDirective()
    {
        return this._directive_;
    }

    public void setDirective(PDirective node)
    {
        if(this._directive_ != null)
        {
            this._directive_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._directive_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._directive_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._directive_ == child)
        {
            this._directive_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._directive_ == oldChild)
        {
            setDirective((PDirective) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
